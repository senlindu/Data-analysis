

# W3C标准
# W3C，即万维网联盟，是web技术领域最具权威和影响力的国际中立性技术标准结构
# 网页主要由三部分组成：结构、表现和行为
# 对应的标准也分三方面：结构化标准语言主要包括XHTML和XML，表现标准语言主要包括CSS，
# 行为标准主要包括对象模型(如W3C DOM)、ECMAScript
# HTML、CSS、JavaScript、Xpath和JSON

# HTML
# HTML是一种表示网页信息的符号标记语言。标记语言是一套标记，HTML使用标记来描述网页
# web浏览器的作用是读取HTML文档，并以网页的形式显示出它们
# 浏览器不会显示HTML标记，而是使用标记解释页面的内容
# HTML语言的特点：
# 1、可以设置文本的格式，如标题、字号、文本颜色、段落等
# 2、可以创建列表
# 3、可以插入图像和媒体
# 4、可以建立表格
# 5、超链接
# HTML基本结构、文档设置标记、图像标记、表格和超链接

# HTML的基本结构
# HTML基本结构.png

# 文档设置标记
# 分为格式标记和文本标记
# code.html
# 格式标记.png
# code1.html
# 文本标记_1.png
# 文本标记_2.png

# 图像标记
# <img>成为图像标记，用来在网页中显示图像。
# 使用方法为：<img src="路径/文件名.图片格式" width="属性值" height="属性值"
# border="属性值" alt="属性值">
# src用来指定我们要加载的图片的路径、图片的名称以及图片格式
# width属性用来指定图片的宽度，单位为px、em、cm、mm
# height属性用来指定图片的高度，单位为px、em、cm、mm
# border属性用来指定图片的边框宽度，单位为px、em、cm、mm
# alt属性有三个作用：
# 1、当网页上的图片被加载完成后，鼠标移动到上面去，会显示这个图片指定的属性文字
# 2、如果图像没有下载或者加载失败，会用文字来代替图像显示
# 3、搜索引擎可以通过这个属性的文字来抓取图片

# 超链接的使用
# <a>标记的基本语法
# <a href="链接地址" target="打开方式" name="页面锚点名称">链接文字或者图片</a>
# href属性值是链接的地址，链接的地址可以是一个网页，也可以是一个视频、图片、音乐等
# target属性用来定义超链接的打开方式。
# 当属性值为_blank时，作用是在一个新的窗口中打开链接；
# 当属性值为_self(默认值)时，作用是在当前窗口打开链接；
# 当属性值为_top时，在顶层窗口中打开文件
# name属性用来指定页面的锚点名称

# 表格
# 表格的基本结构包括<table> <caption> <tr> <td> <th>
# <table>的基本格式为<table 属性1 属性2....>表格内容</table>
# table标记的属性：
# table属性.png
# <caption>用于在表格中使用标题。属性的插入位置直接位于<table>属性之后，<tr>表格行之前
# align属性可以取四个值：
# 1、top标题在表格上部
# 2、bottom标题在表格下部
# 3、left标题在表格左部
# 4、right标题在表格右部
# <tr>用来定义表格的行，对于每一个表格行，都有一对<tr>...</tr>标记表示，每一行<tr>标记
# 内可以嵌套多个<td>或<th>标记。常见属性：
# tr常见属性.png
# <td>和<th>都是单元格的标记，其必须嵌套在<tr>标记内，成对出现。
# <th>是表头标记，通常位于首行或首列，<th>的文字默认会被加粗，<td>则不会
# <td>是数据标记，表示该单元格的具体数据
# 常用属性如下：
# th_td常见属性.png
# 实例
# code2.html


# CSS
# CSS指层叠样式表，用来定义如何显示HTML元素，一般和HTML配合使用
# CSS样式表的目的是为了解决内容与表现分离的问题，即使同一个HTML文档也能表现出外观的多样化
# 使用CSS样式的方式，一共有三种：
# 1、内联样式表：CSS代码直接写在现有的HTML标记中，直接使用style属性改变样式
# <body style="background-color:green;margin:0;padding:0;"></body>
# 2、嵌入式样式表：CSS样式代码写在<style type="text/css"></style>标记之间，
# 一般情况下嵌入式CSS样式写在<head></head>之间
# 3、外部样式表：CSS代码写在一个单独的外部文件中，这个CSS样式文件以".css"为扩展
# 名，在<head>内(不是在<style>标记内)使用<link>标记将CSS样式文件链接到HTML文件内
# <link rel="StyleSheet" type="text/css" href="style.css">
# CSS规则由两个主要部分构成：选择器以及一条或多条声明
# 选择器通常是需要改变样式的HTML元素，每条声明由一个属性和一个值组成。
# 属性是希望设置的样式属性，每个属性有一个值。属性和值由冒号分开
# h1{color:blue; font-size:12px}
# 其中h1为选择器，color和font-size为属性，blue和12px是属性值
# 根据选择器的定义方式，可以将样式表的定义分成三种方式：
# 选择器的三种方式.png
# CSS的常见属性：颜色、字体、背景、文本、列表
# css颜色-字体-背景.png
# css背景-文本.png
# CSS列表.png
# code3.html


# JavaScript
# JavaScript是一种轻量级的脚本语言，和Python语言是一样的，只不过JavaScript是由
# 浏览器进行解释执行的。
# JavaScript可以插入HTML页面中
# 如何使用JavaScript有两种方法：
# 1、直接插入代码
# 在<script></script>标记中编写代码，可以嵌入到任何地方，一般放到<head>中
# 2、外部引入js文件
# 把JavaScript代码放到单独的.js文件，然后在HTML中通过<script src="目标文档的url">
# </script>的方式引入js文件，其中目标文档的URL即是链接外部的js文件
# 第二种更利于维护代码，并且多个页面可以各自引用同一份.js文件
# 基本语法、数据类型和变量、运算符和操作符、条件判断、循环和函数

# 基本语法
# 严格区分大小写，JavaScript会忽略关键字、变量名、数字、函数名或其他各种元素之间
# 的空格、制表符或换行符
# 我们可以使用缩进、换行来使代码整齐，提高可读性
# 语句块是一组语句的集合，使用{}形成一个块block，并且可以嵌套，形成层级结构
# 注释分为单行注释(//)和多行注释(/**/)

# 数据类型和变量
# JavaScript数据类型和变量_1.png
# JavaScript数据类型和变量_2.png
# JavaScript是弱类型的编程语言，声明变量使用关键字var，变量名不能用数字开头，也不能
# 是关键字

# 操作符和运算符
# JavaScript运算符和操作符.png

# 条件判断
# 使用if(){...}else{...}

# 循环
# for循环，while循环(像C语言)
# 还有一个变体是for...in循环
# while分为while(){...}和do{...}while()

# 函数
# 定义函数使用function关键字


# XPath
# XPath是一门在XML文档中查找信息的语言，被用于在XML文档中通过元素和属性进行导航
# 节点、语法、轴和运算符

# 节点
# 在XPath中，XML文档是被当做节点树对待的，有七种类型的节点：元素、属性、文本、
# 命名空间、处理指令、注释以及文档(根)节点。
# XPath节点_1.png
# XPath节点_2.png

# XPath语法
# XPath使用路径表达式来选取XML文档中的节点或节点集。节点是沿着路径或步来选取的
# XPath路径表达式.png
# 谓语的用法
# XPath谓语示例.png
# 通配符与操作符
# XPath通配符和操作符.png

# XPath轴
# 轴定义了所选节点与当前节点之间的树关系
# 步包括：轴、节点测试、零个或更多谓语
# 步的语法为：轴名称::节点测试[谓语]
# XPath轴.png

# XPath运算符
# 表达式可返回节点集、字符串、逻辑值以及数字
# XPath运算符示例分析_1.png
# XPath运算符示例分析_2.png


# JSON
# JSON是对象表示法，用于存储和交换文本信息
# JSON语法
# JSON语法.png
# 
